buildscript {
    ext.kotlin_version = '1.2.41'

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'antlr'
apply plugin: 'maven'
apply plugin: 'jacoco'

group = "com.github.sybila"
version = '2.2.0'

//antlr config
generateGrammarSource {
    arguments += [
            "-no-visitor",
            "-listener"
    ]
}

// make the Java compile task depend on the antlr4 task
compileKotlin.dependsOn generateGrammarSource

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'com.intellij:annotations:5.1'
    compile 'com.github.daemontus:jafra:1.0.8'
    compile 'com.github.daemontus:egholm:0.3.0'
    compile 'com.github.sybila:ctl-parser:2.2.2'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    antlr "org.antlr:antlr4:4.6"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

jacoco {
    toolVersion = "0.7.5.201505241946"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    void
}

//travis has some strict RAM restrictions, can't afford to exceed this on the CI server
tasks.withType(Test) {
    maxHeapSize = "1024m"
    jvmArgs "-Xmx1024m"
}